{"version":3,"sources":["components/Expenses/ExpenseDate.js","components/UI/Card.js","components/Expenses/ExpenseItem.js","components/Expenses/ExpensesList.js","components/Expenses/ExpenseFilter.js","components/Chart/ChartBar.js","components/Chart/Chart.js","components/Expenses/ExpensesChart.js","components/Expenses/Expenses.js","components/NewExpense/ExpenseForm.js","components/NewExpense/NewExpense.js","App.js","index.js"],"names":["ExpenseDate","props","month","date","toLocaleString","day","year","getFullYear","className","Card","classes","children","ExpenseItem","title","amount","ExpensesList","expenses","length","map","expense","id","ExpensesFilter","value","selected","onChange","e","onChangeFilter","target","ChartBar","barFillHeight","maxValue","Math","round","style","height","label","Chart","dataPointValues","dataPoints","dataPoint","totalMax","max","ExpensesChart","chartDataPoint","getMonth","Expenses","useState","storeFilterYear","setStoreFilterYear","filteredExpenses","filter","toString","ExpenseForm","newTitle","setNewTitle","newAmount","setNewAmount","newDate","setNewDate","onSubmit","preventDefault","expenseData","Date","onSaveExpenseData","type","console","log","min","step","onClick","onCancel","NewExpense","isEditing","setIsEditing","enteredExpenseData","random","onAddExpenseHandler","DUMMY_EXPENSES","App","setExpenses","prevExpenses","ReactDOM","createRoot","document","getElementById","render"],"mappings":"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","file":"static/js/main.847bd39a.chunk.js","sourcesContent":["// Date props - App>ExpenseItem>ExpenseDate\nimport './ExpenseDate.css'\n\nconst ExpenseDate = (props) => {\n    \n    const month = props.date.toLocaleString(\"en-UK\", { month: \"long\" });\n    const day = props.date.toLocaleString(\"en-UK\", { day: \"2-digit\" });\n    const year = props.date.getFullYear();\n\n    return(\n        <div className='expense-date'>\n        <div className='expense-date__month'>{month}</div>\n        <div className='expense-date__day'>{day}</div>\n        <div className='expense-date__year'>{year}</div>\n      </div>\n    );\n}\n\nexport default ExpenseDate;","import \"./Card.css\";\n// this function is a reusable wrapper to provide rounded borders to each component\nconst Card = (props) => {\n  // variable to store the dynamic classes\n  const classes = \"card \" + props.className;\n  // create custom component which will wrap around expenseItems and share similar css\n  return <div className={classes}>{props.children}</div>;\n}\n\nexport default Card;\n","// Title, Date, Amount props - App>ExpenseItem\nimport React from \"react\";\nimport ExpenseDate from \"./ExpenseDate\";\nimport \"./ExpenseItems.css\";\nimport Card from \"../UI/Card\";\n\nconst ExpenseItem = (props) => {\n  return (\n    <li>\n      <Card className=\"expense-item\">\n        <ExpenseDate date={props.date} />\n        <div className=\"expense-item__description\">\n          <h2>{props.title}</h2>\n        </div>\n        <div className=\"expense-item__price\">Â£{props.amount}</div>\n      </Card>\n    </li>\n  );\n};\n\nexport default ExpenseItem;\n","import './ExpensesList.css';\nimport ExpenseItem from './ExpenseItem';\n\nconst ExpensesList = (props) => {\n\n    if(props.expenses.length === 0 ){\n        return <h2 className='expenses-list__fallback'>Found No Expenses</h2>\n    }\n    return (  \n        <ul className='expenses-list'>\n            {props.expenses.map((expense) => (\n        <ExpenseItem\n          key={expense.id}\n          title={expense.title}\n          amount={expense.amount}\n          date={expense.date}\n        />\n      ))}\n        </ul>\n    );\n}\n \nexport default ExpensesList;","import React from \"react\";\nimport \"./ExpenseFilter.css\";\n\nconst ExpensesFilter = (props) => {\n  const filterHandler = (e) => {\n    props.onChangeFilter(e.target.value);\n  };\n\n  \n\n  return (\n    <div className=\"expenses-filter\">\n      <div className=\"expenses-filter__control\">\n        <label>Filter by year</label>\n        <select value={props.selected} onChange={filterHandler}>\n          <option value=\"2022\">2022</option>\n          <option value=\"2021\">2021</option>\n          <option value=\"2020\">2020</option>\n          <option value=\"2019\">2019</option>\n        </select>\n      </div>\n    </div>\n  );\n};\n\nexport default ExpensesFilter;\n","import \"./ChartBar.css\";\nimport React from \"react\";\n\nconst ChartBar = (props) => {\n  let barFillHeight = \"0%\";\n\n  if (props.maxValue > 0) {\n    barFillHeight = Math.round((props.value / props.maxValue) * 100) + \"%\";\n  }\n  return (\n    <div className=\"chart-bar\">\n      <div className=\"chart-bar__inner\">\n        <div\n          className=\"chart-bar__fill\"\n          style={{ height: barFillHeight }}\n        ></div>\n      </div>\n      <div className=\"chart-bar__label\">{props.label}</div>\n    </div>\n  );\n};\n\nexport default ChartBar;\n","import \"./Chart.css\";\nimport React from \"react\";\nimport ChartBar from \"./ChartBar.js\";\n\nconst Chart = (props) => {\n  const dataPointValues = props.dataPoints.map((dataPoint) => dataPoint.value);\n  const totalMax = Math.max(...dataPointValues);\n  return (\n    <div className=\"chart\">\n      {props.dataPoints.map((dataPoints) => (\n        <ChartBar\n          key={dataPoints.label}\n          value={dataPoints.value}\n          maxValue={totalMax}\n          label={dataPoints.label}\n        />\n      ))}\n    </div>\n  );\n};\n\nexport default Chart;\n","import React from \"react\";\nimport Chart from \"../Chart/Chart.js\";\nconst ExpensesChart = (props) => {\n  const chartDataPoint = [\n    { label: \"Jan\", value: 0 },\n    { label: \"Feb\", value: 0 },\n    { label: \"Mar\", value: 0 },\n\n    { label: \"Apr\", value: 0 },\n    { label: \"May\", value: 0 },\n    { label: \"Jun\", value: 0 },\n\n    { label: \"Jul\", value: 0 },\n    { label: \"Aug\", value: 0 },\n    { label: \"Sep\", value: 0 },\n\n    { label: \"Oct\", value: 0 },\n    { label: \"Nov\", value: 0 },\n    { label: \"Dec\", value: 0 },\n  ];\n\n  for (const expense of props.expenses) {\n    const expenseMonth = expense.date.getMonth();\n    chartDataPoint[expenseMonth].value += expense.amount;\n  }\n  return <Chart dataPoints={chartDataPoint} />;\n};\n\nexport default ExpensesChart;\n","import React, { useState } from \"react\";\nimport ExpensesList from \"./ExpensesList\";\nimport Card from \"../UI/Card\";\nimport \"./Expenses.css\";\nimport ExpensesFilter from \"./ExpenseFilter\";\nimport ExpensesChart from \"./ExpensesChart\";\n\nconst Expenses = (props) => {\n  const [storeFilterYear, setStoreFilterYear] = useState(\"2022\");\n\n  const storeFilter = (year) => {\n    setStoreFilterYear(year);\n  };\n\n  const filteredExpenses = props.expenses.filter((expense) => {\n    return expense.date.getFullYear().toString() === storeFilterYear;\n  });\n\n  return (\n    <div>\n      <Card className=\"expenses\">\n        <ExpensesFilter\n          selected={storeFilterYear}\n          onChangeFilter={storeFilter}\n        />\n        <ExpensesChart expenses={filteredExpenses}/>\n        <ExpensesList expenses={filteredExpenses} />\n      </Card>\n    </div>\n  );\n};\n\nexport default Expenses;\n","import React, { useState } from \"react\";\nimport \"./ExpenseForm.css\";\n\nconst ExpenseForm = (props) => {\n  const [newTitle, setNewTitle] = useState(\"\");\n  const [newAmount, setNewAmount] = useState(\"\");\n  const [newDate, setNewDate] = useState(\"\");\n  // onChange event handler\n  const titleChangeHandler = (e) => {\n    //   store the input as the setTitle\n    setNewTitle(e.target.value);\n    console.log(newTitle);\n  };\n  // amount change handler\n  const amountChangeHandler = (e) => {\n    //   store the input as the setAmount\n    setNewAmount(e.target.value);\n    console.log(newAmount);\n  };\n  // date change handler\n  const dateChangeHandler = (e) => {\n    //   store the input as the setDate\n\n    setNewDate(e.target.value);\n    console.log(newDate);\n  };\n  // submit handler set on the whole form to prevent awkward browser differences\n  const submitHandler = (e) => {\n    //   prevent the form doing anything funny\n    e.preventDefault();\n    // variable to store all the data as an object\n    const expenseData = {\n      title: newTitle,\n      amount: +newAmount,\n      date: new Date(newDate),\n    };\n    // step two of passing the object above up into the new expense as props argument passed down from newExpense\n    props.onSaveExpenseData(expenseData);\n    // set the state as clear again - two way binding\n    setNewTitle(\"\");\n    setNewAmount(\"\");\n    setNewDate(\"\");\n  };\n  // form for the new expense\n\n  return (\n    <div>\n      <form onSubmit={submitHandler}>\n        <div className=\"new-expense__controls\">\n          <div className=\"new-expense__control\">\n            <label>Title</label>\n            <input type=\"text\" value={newTitle} onChange={titleChangeHandler} />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Amount</label>\n            <input\n              type=\"number\"\n              value={newAmount}\n              min=\"0.01\"\n              step=\"0.01\"\n              onChange={amountChangeHandler}\n            />\n          </div>\n          <div className=\"new-expense__control\">\n            <label>Date</label>\n            <input\n              type=\"date\"\n              value={newDate}\n              min=\"2019-01-01\"\n              max=\"2022-12-31\"\n              onChange={dateChangeHandler}\n            />\n          </div>\n        </div>\n        <div className=\"new-expense__actions\">\n          <button type=\"button\" onClick={props.onCancel}>Cancel</button>\n          <button type=\"submit\">Add Expense</button>\n        </div>\n      </form>\n    </div>\n  );\n};\n\nexport default ExpenseForm;\n","import React, {useState} from \"react\";\nimport ExpenseForm from \"./ExpenseForm\";\nimport \"./NewExpense.css\";\n\nconst NewExpense = (props) => {\n  const [isEditing, setIsEditing] = useState(false);\n\n  const startEditingHandler = () => {\n    setIsEditing(true);\n  };\n\n  const stopEditingHandler = () => {\n    setIsEditing(false);\n  }\n  // expense data handler to extract the object created in the expense form\n  // argument should have a different name from the object\n  const saveExpenseDataHandler = (enteredExpenseData) => {\n    const expenseData = {\n      // spread operator to bring in that object\n      ...enteredExpenseData,\n      // adding a new key value pair\n      id: Math.random().toString(),\n    };\n    console.log(enteredExpenseData);\n    // adding the expenseData as an argument to a prop passed down to us from App.js\n    props.onAddExpenseHandler(expenseData);\n    setIsEditing(false);\n  };\n  return (\n    <div className=\"new-expense\">\n      {/* only named onSave to remind that this should be a function - convention */}\n      {/* displaying component based on state */}\n      {!isEditing && <button onClick={startEditingHandler}>Add New Expense</button>}\n      {isEditing && <ExpenseForm onSaveExpenseData={saveExpenseDataHandler} onCancel={stopEditingHandler}/>}\n    </div>\n  );\n};\n\nexport default NewExpense;\n","import React, { useState } from \"react\";\nimport Expenses from \"./components/Expenses/Expenses\";\nimport NewExpense from \"./components/NewExpense/NewExpense\";\n\nconst DUMMY_EXPENSES = [\n  {\n    id: \"e1\",\n    title: \"Toilet Paper\",\n    amount: 94.12,\n    date: new Date(2020, 7, 14),\n  },\n  { id: \"e2\", title: \"New TV\", amount: 799.49, date: new Date(2021, 2, 12) },\n  {\n    id: \"e3\",\n    title: \"Car Insurance\",\n    amount: 294.67,\n    date: new Date(2021, 2, 28),\n  },\n  {\n    id: \"e4\",\n    title: \"New Desk (Wooden)\",\n    amount: 450,\n    date: new Date(2021, 5, 12),\n  },\n];\n\n\nconst App = () => {\n  // initial state value using non dynamic values above\n  const [expenses, setExpenses] = useState(DUMMY_EXPENSES);\n\n  // function to pass up the expenseData object from expenseform> newexpense> App.js\n  const addExpenseHandler = (expense) => {\n    // adding new expense to expenses array and add to the dynamic list\n    // spread into existing expenses and add expense argument from function\n    setExpenses((prevExpenses) => {\n      return [expense, ...expenses];\n    });\n  };\n  \n  return (\n    <div>\n      <NewExpense onAddExpenseHandler={addExpenseHandler} />\n      <Expenses expenses={expenses} />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom/client';\n\nimport './index.css';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(<App />);\n"],"sourceRoot":""}